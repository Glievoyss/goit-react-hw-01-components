{"version":3,"sources":["components/ProfileCard/profileCard.module.css","components/Stats/Stats.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/ProfileCard/PeofileCard.js","profileUser.js","components/Stats/Stats.js","statsList.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","ProfileCard","user","className","styles","profile","description","src","avatar","alt","name","tag","location","stats","label","quantity","followers","views","likes","randomizeColor","r","Math","floor","random","g","b","toString","Stats","title","statsSection","toUpperCase","statList","map","elem","key","id","item","style","backgroundColor","percentage","defaultProps","FriendList","friends","friendList","prop","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","statsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2628684e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profileCard_profile__-Wzop\",\"avatar\":\"profileCard_avatar__2PIoY\",\"name\":\"profileCard_name__2W326\",\"tag\":\"profileCard_tag__3NUXj\",\"location\":\"profileCard_location__1IaHY\",\"stats\":\"profileCard_stats__2bVEE\",\"label\":\"profileCard_label__3HjjQ\",\"quantity\":\"profileCard_quantity__1f9q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__1aHUT\",\"statList\":\"Stats_statList__2QzpE\",\"item\":\"Stats_item__2og0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__B-2il\",\"item\":\"FriendList_item__K9Cq8\",\"statusOnline\":\"FriendList_statusOnline__1Xr0f\",\"statusOffline\":\"FriendList_statusOffline__1LTTq\",\"avatar\":\"FriendList_avatar__2nZTn\",\"name\":\"FriendList_name__aupWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__36ZH2\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './profileCard.module.css';\r\n\r\nconst ProfileCard = ({ user }) => {\r\n  return (\r\n    <section className=\"profileCard-section\">\r\n      <div className={styles.profile}>\r\n        <div className={styles.description}>\r\n          <img src={user.avatar} alt=\"user avatar\" className={styles.avatar} />\r\n          <p className={styles.name}>{user.name}</p>\r\n          <p className={styles.tag}>@{user.tag}</p>\r\n          <p className={styles.location}>{user.location}, Brasil</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n          <li>\r\n            <span className={styles.label}>Followers</span>\r\n            <span className={styles.quantity}>{user.stats.followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Views</span>\r\n            <span className={styles.quantity}>{user.stats.views}</span>\r\n          </li>\r\n          <li>\r\n            <span className={styles.label}>Likes</span>\r\n            <span className={styles.quantity}>{user.stats.likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProfileCard.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProfileCard;\r\n","export default {\r\n  name: 'Jacques Gluke',\r\n  tag: 'jgluke',\r\n  location: 'Ocho Rios, Jamaica',\r\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\r\n  stats: {\r\n    followers: 5603,\r\n    views: 4827,\r\n    likes: 1308,\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Stats.module.css';\r\n\r\nconst randomizeColor = function randomizeColor() {\r\n  const r = Math.floor(Math.random() * 256);\r\n  const g = Math.floor(Math.random() * 256);\r\n  const b = Math.floor(Math.random() * 256);\r\n  const randomColor = `#${r.toString(16) + g.toString(16) + b.toString(16)}`;\r\n  return randomColor;\r\n};\r\n\r\nconst Stats = ({ title, stats }) => {\r\n  return (\r\n    <section className={styles.statsSection}>\r\n      {title && <h2 className={styles.title}>{title.toUpperCase()}</h2>}\r\n      <ul className={styles.statList}>\r\n        {stats.map(elem => (\r\n          <li\r\n            key={elem.id}\r\n            className={styles.item}\r\n            style={{ backgroundColor: randomizeColor() }}\r\n          >\r\n            <span className={styles.label}>{elem.label}</span>\r\n            <span className={styles.percentage}>{elem.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStats.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nStats.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Stats;\r\n","export default [\r\n  { id: 'id-1', label: '.docx', percentage: 22 },\r\n  { id: 'id-2', label: '.pdf', percentage: 4 },\r\n  { id: 'id-3', label: '.mp3', percentage: 17 },\r\n  { id: 'id-4', label: '.psd', percentage: 47 },\r\n  { id: 'id-5', label: '.pdf', percentage: 10 },\r\n  { id: 'id-6', label: '.pdf', percentage: 10 },\r\n];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(prop => (\r\n        <li key={prop.id} className={styles.item}>\r\n          <span\r\n            className={\r\n              prop.isOnline ? styles.statusOnline : styles.statusOffline\r\n            }\r\n          />\r\n          <img className={styles.avatar} src={prop.avatar} alt=\"\" width=\"90\" />\r\n          <p className={styles.name}>{prop.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport ProfileCard from './ProfileCard/PeofileCard';\r\nimport user from '../profileUser';\r\nimport Stats from './Stats/Stats';\r\nimport statsList from '../statsList';\r\nimport FriendList from './FriendList/FriendList';\r\nimport friends from '../friends.json';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport items from '../transactions.json';\r\n\r\nconst App = () => (\r\n  <>\r\n    <ProfileCard user={user} />\r\n    <Stats title=\"Upload stats\" stats={statsList} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={items} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}